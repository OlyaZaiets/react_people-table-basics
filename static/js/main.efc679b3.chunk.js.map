{"version":3,"sources":["components/NavItem/NavItem.tsx","components/Navbar/Navbar.tsx","components/Pages/HomePage.tsx","components/Pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavItem","_ref","to","title","_jsx","NavLink","className","_ref2","isActive","classNames","children","Navbar","role","_jsxs","HomePage","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","React","memo","person","name","slug","sex","Link","concat","PeopleTable","people","selectedPersonSlug","map","born","died","motherName","fatherName","isSelectedPerson","mother","find","mum","father","dad","existingMother","existingFather","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","hasErrorMessage","setHasErrorMessage","_useState5","_useState6","isLoading","setIsLoading","_useParams$personSlug","useParams","personSlug","IsTableVisible","Boolean","length","IsTableEmpty","getPeopleFromServer","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","receivedPeopleFromServer","wrap","_context","prev","next","sent","t0","finish","stop","useEffect","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.efc679b3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const NavItem: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { NavItem } from '../NavItem';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavItem\n          to=\"/\"\n          title=\"Home\"\n        />\n        <NavItem\n          to=\"people\"\n          title=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedPersonSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n  selectedPersonSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug, sex, born, died, motherName, fatherName,\n          } = person;\n\n          const isSelectedPerson = selectedPersonSlug === slug;\n          const mother = people.find(mum => mum.name === motherName);\n          const father = people.find(dad => dad.name === fatherName);\n          const existingMother = motherName || '-';\n          const existingFather = fatherName || '-';\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': isSelectedPerson,\n              })}\n              key={slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {!mother ? existingMother : <PersonLink person={mother} />}\n              </td>\n              <td>\n                {!father ? existingFather : <PersonLink person={father} />}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasErrorMessage, setHasErrorMessage] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { personSlug = '' } = useParams();\n\n  const IsTableVisible = Boolean(people.length && !hasErrorMessage);\n  const IsTableEmpty = Boolean(\n    !people.length && !hasErrorMessage && !isLoading,\n  );\n\n  const getPeopleFromServer = useCallback(async () => {\n    setIsLoading(true);\n    setHasErrorMessage(false);\n\n    try {\n      const receivedPeopleFromServer = await getPeople();\n\n      setPeople(receivedPeopleFromServer);\n    } catch {\n      setHasErrorMessage(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {IsTableEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {IsTableVisible && (\n            <PeopleTable\n              people={people}\n              selectedPersonSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/Pages/HomePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\n\nimport { PeoplePage } from './components/Pages/PeoplePage';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}